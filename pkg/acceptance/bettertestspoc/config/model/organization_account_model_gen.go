// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type OrganizationAccountModel struct {
	Name               tfconfig.Variable `json:"name,omitempty"`
	AdminName          tfconfig.Variable `json:"admin_name,omitempty"`
	AdminPassword      tfconfig.Variable `json:"admin_password,omitempty"`
	AdminRsaPublicKey  tfconfig.Variable `json:"admin_rsa_public_key,omitempty"`
	Comment            tfconfig.Variable `json:"comment,omitempty"`
	Edition            tfconfig.Variable `json:"edition,omitempty"`
	Email              tfconfig.Variable `json:"email,omitempty"`
	FirstName          tfconfig.Variable `json:"first_name,omitempty"`
	LastName           tfconfig.Variable `json:"last_name,omitempty"`
	MustChangePassword tfconfig.Variable `json:"must_change_password,omitempty"`
	Region             tfconfig.Variable `json:"region,omitempty"`
	RegionGroup        tfconfig.Variable `json:"region_group,omitempty"`

	DynamicBlock *config.DynamicBlock `json:"dynamic,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func OrganizationAccount(
	resourceName string,
	name string,
	adminName string,
	edition string,
	email string,
) *OrganizationAccountModel {
	o := &OrganizationAccountModel{ResourceModelMeta: config.Meta(resourceName, resources.OrganizationAccount)}
	o.WithName(name)
	o.WithAdminName(adminName)
	o.WithEdition(edition)
	o.WithEmail(email)
	return o
}

func OrganizationAccountWithDefaultMeta(
	name string,
	adminName string,
	edition string,
	email string,
) *OrganizationAccountModel {
	o := &OrganizationAccountModel{ResourceModelMeta: config.DefaultMeta(resources.OrganizationAccount)}
	o.WithName(name)
	o.WithAdminName(adminName)
	o.WithEdition(edition)
	o.WithEmail(email)
	return o
}

///////////////////////////////////////////////////////////////////////
// set proper json marshalling, handle depends on and dynamic blocks //
///////////////////////////////////////////////////////////////////////

func (o *OrganizationAccountModel) MarshalJSON() ([]byte, error) {
	type Alias OrganizationAccountModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(o),
		DependsOn: o.DependsOn(),
	})
}

func (o *OrganizationAccountModel) WithDependsOn(values ...string) *OrganizationAccountModel {
	o.SetDependsOn(values...)
	return o
}

func (o *OrganizationAccountModel) WithDynamicBlock(dynamicBlock *config.DynamicBlock) *OrganizationAccountModel {
	o.DynamicBlock = dynamicBlock
	return o
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (o *OrganizationAccountModel) WithName(name string) *OrganizationAccountModel {
	o.Name = tfconfig.StringVariable(name)
	return o
}

func (o *OrganizationAccountModel) WithAdminName(adminName string) *OrganizationAccountModel {
	o.AdminName = tfconfig.StringVariable(adminName)
	return o
}

func (o *OrganizationAccountModel) WithAdminPassword(adminPassword string) *OrganizationAccountModel {
	o.AdminPassword = tfconfig.StringVariable(adminPassword)
	return o
}

func (o *OrganizationAccountModel) WithAdminRsaPublicKey(adminRsaPublicKey string) *OrganizationAccountModel {
	o.AdminRsaPublicKey = tfconfig.StringVariable(adminRsaPublicKey)
	return o
}

func (o *OrganizationAccountModel) WithComment(comment string) *OrganizationAccountModel {
	o.Comment = tfconfig.StringVariable(comment)
	return o
}

func (o *OrganizationAccountModel) WithEdition(edition string) *OrganizationAccountModel {
	o.Edition = tfconfig.StringVariable(edition)
	return o
}

func (o *OrganizationAccountModel) WithEmail(email string) *OrganizationAccountModel {
	o.Email = tfconfig.StringVariable(email)
	return o
}

func (o *OrganizationAccountModel) WithFirstName(firstName string) *OrganizationAccountModel {
	o.FirstName = tfconfig.StringVariable(firstName)
	return o
}

func (o *OrganizationAccountModel) WithLastName(lastName string) *OrganizationAccountModel {
	o.LastName = tfconfig.StringVariable(lastName)
	return o
}

func (o *OrganizationAccountModel) WithMustChangePassword(mustChangePassword bool) *OrganizationAccountModel {
	o.MustChangePassword = tfconfig.BoolVariable(mustChangePassword)
	return o
}

func (o *OrganizationAccountModel) WithRegion(region string) *OrganizationAccountModel {
	o.Region = tfconfig.StringVariable(region)
	return o
}

func (o *OrganizationAccountModel) WithRegionGroup(regionGroup string) *OrganizationAccountModel {
	o.RegionGroup = tfconfig.StringVariable(regionGroup)
	return o
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (o *OrganizationAccountModel) WithNameValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.Name = value
	return o
}

func (o *OrganizationAccountModel) WithAdminNameValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.AdminName = value
	return o
}

func (o *OrganizationAccountModel) WithAdminPasswordValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.AdminPassword = value
	return o
}

func (o *OrganizationAccountModel) WithAdminRsaPublicKeyValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.AdminRsaPublicKey = value
	return o
}

func (o *OrganizationAccountModel) WithCommentValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.Comment = value
	return o
}

func (o *OrganizationAccountModel) WithEditionValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.Edition = value
	return o
}

func (o *OrganizationAccountModel) WithEmailValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.Email = value
	return o
}

func (o *OrganizationAccountModel) WithFirstNameValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.FirstName = value
	return o
}

func (o *OrganizationAccountModel) WithLastNameValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.LastName = value
	return o
}

func (o *OrganizationAccountModel) WithMustChangePasswordValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.MustChangePassword = value
	return o
}

func (o *OrganizationAccountModel) WithRegionValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.Region = value
	return o
}

func (o *OrganizationAccountModel) WithRegionGroupValue(value tfconfig.Variable) *OrganizationAccountModel {
	o.RegionGroup = value
	return o
}
